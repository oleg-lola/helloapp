# Python CircleCI 2.0 configuration file
# Check https://circleci.com/docs/2.0/language-python/ for more details
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
      - image: circleci/python:3.6.1
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4
    working_directory: ~/hello-repo
    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt
      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}
      - run:
          name: meta-data
          command: |
            python3 -m venv venv
            . venv/bin/activate
            VERSION=$(python3 ./hello-app.py --version)
            echo -e \"AppVersion: ${VERSION}\n CommitID: ${CIRCLE_SHA1}\n PrevBuildNum: ${CIRCLE_PREVIOUS_BUILD_NUM}\n Branch: $CIRCLE_BRANCH\n\" > ./version.txt
      - run:
          name: PWD
          command: |
            pwd
      - run:
          name: run tests
          command: |
            . venv/bin/activate
            pycodestyle -v --ignore=E501  ./hello-app.py
      - run:
          name: check the data
          command: |
            cat ./version.txt
      # - store_artifacts:
      #     path: test-reports
      #     destination: test-reports
  test1:
    docker:
      - image: circleci/python:3.6.1
    steps:
      # - attach_workspace:
      #     at: ~/
      - run:
          name: run tests
          command: |
            . venv/bin/activate
            pycodestyle -v --ignore=E501  ./hello-app.py
      - run:
          name: check the data
          command: |
            cat ./version.txt


workflows:
  version: 2
  build-test:
    jobs:
      - build
      - test1:
          requires:
            - build
# - deploy-master:
#     requires:
#       - build
#     filters:
#       branches:
#         only: master
      - deploy-staging:
          requires:
          - build
          filters:
            branches:
              only: staging
