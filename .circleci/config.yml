# Python CircleCI 2.0 configuration file
# Check https://circleci.com/docs/2.0/language-python/ for more details
version: 2

working_directory: &working_directory
  ~/hello-repo

jobs:
  build:
    working_directory: *working_directory
    docker:
      - image: circleci/python:3.6.1
    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt
      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}
      - run:
          name: meta-data
          command: |
            python3 -m venv venv
            . venv/bin/activate
            VERSION=$(python3 ./hello-app.py --version)
            echo -e \"AppVersion: ${VERSION}\n CommitID: ${CIRCLE_SHA1}\n PrevBuildNum: ${CIRCLE_PREVIOUS_BUILD_NUM}\n Branch: $CIRCLE_BRANCH\n\" > ./version.txt
      - run:
          name: PWD
          command: |
            pwd
            ls -la
      - persist_to_workspace:
          root: .
          paths:
            - .

  test1:
    working_directory: *working_directory
    docker:
      - image: circleci/python:3.6.1
    steps:
      - attach_workspace:
          at: *working_directory
      - run:
          name: PWD
          command: |
            pwd
            ls -la
      - run:
          name: run tests
          command: |
            . venv/bin/activate
            pycodestyle -v --ignore=E501  ./hello-app.py
      - run:
          name: check the data
          command: |
            cat ./version.txt

workflows:
  version: 2
  build-test:
    jobs:
      - build
      - test1:
          requires:
            - build
          filters:
            branches:
              only: master
      - deploy-staging:
          requires:
          - build
          filters:
            branches:
              only: staging
